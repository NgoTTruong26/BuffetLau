{"ast":null,"code":"import * as yup from \"yup\";\nyup.addMethod(yup.string, \"emptyAsUndefined\", function (message) {\n  console.log(message);\n  return this.transform(value => {\n    console.log(message);\n    return message;\n  });\n});\nyup.addMethod(yup.number, \"emptyAsUndefined\", function () {\n  return this.transform((value, originalValue) => {\n    var _String;\n\n    return (_String = String(originalValue)) !== null && _String !== void 0 && _String.trim() ? value : undefined;\n  });\n});\nexport default yup;","map":{"version":3,"sources":["V:/Buffet-t12/client/src/yup/yupGlobal.ts"],"names":["yup","addMethod","string","message","console","log","transform","value","number","originalValue","String","trim","undefined"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGAA,GAAG,CAACC,SAAJ,CACED,GAAG,CAACE,MADN,EAEE,kBAFF,EAGE,UAAUC,OAAV,EAAmB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,SAAO,KAAKG,SAAL,CAAgBC,KAAD,IAAW;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,WAAOA,OAAP;AACD,GAJM,CAAP;AAKD,CAXH;AAcAH,GAAG,CAACC,SAAJ,CAAgCD,GAAG,CAACQ,MAApC,EAA4C,kBAA5C,EAAgE,YAAY;AAC1E,SAAO,KAAKF,SAAL,CAAe,CAACC,KAAD,EAAQE,aAAR;AAAA;;AAAA,WACpB,WAAAC,MAAM,CAACD,aAAD,CAAN,4CAAuBE,IAAvB,KAAgCJ,KAAhC,GAAwCK,SADpB;AAAA,GAAf,CAAP;AAGD,CAJD;AAwBA,eAAeZ,GAAf","sourcesContent":["import * as yup from \"yup\";\r\nimport { AnyObject, Maybe } from \"yup/lib/types\";\r\n\r\nyup.addMethod<yup.StringSchema>(\r\n  yup.string,\r\n  \"emptyAsUndefined\",\r\n  function (message) {\r\n    console.log(message);\r\n\r\n    return this.transform((value) => {\r\n      console.log(message);\r\n\r\n      return message;\r\n    });\r\n  }\r\n);\r\n\r\nyup.addMethod<yup.NumberSchema>(yup.number, \"emptyAsUndefined\", function () {\r\n  return this.transform((value, originalValue) =>\r\n    String(originalValue)?.trim() ? value : undefined\r\n  );\r\n});\r\n\r\ndeclare module \"yup\" {\r\n  interface StringSchema<\r\n    TType extends Maybe<string> = string | undefined,\r\n    TContext extends AnyObject = AnyObject,\r\n    TOut extends TType = TType\r\n  > extends yup.BaseSchema<TType, TContext, TOut> {\r\n    emptyAsUndefined(a: any): StringSchema<TType, TContext>;\r\n  }\r\n\r\n  interface NumberSchema<\r\n    TType extends Maybe<number> = number | undefined,\r\n    TContext extends AnyObject = AnyObject,\r\n    TOut extends TType = TType\r\n  > extends yup.BaseSchema<TType, TContext, TOut> {\r\n    emptyAsUndefined(): NumberSchema<TType, TContext>;\r\n  }\r\n}\r\n\r\nexport default yup;\r\n"]},"metadata":{},"sourceType":"module"}