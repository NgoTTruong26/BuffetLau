{"ast":null,"code":"import * as yup from \"yup\";\nyup.addMethod(yup.string, \"numberAdults\", function (message) {\n  return this.test(\"numberAdults2\", message, function (value) {\n    const {\n      path,\n      createError\n    } = this;\n\n    function isNumeric(value) {\n      return /^-?\\d+$/.test(value);\n    }\n\n    if (!isNumeric(value)) {\n      return createError({\n        path,\n        message: \"Số người đi kí tự nhập phải là số!!\"\n      });\n    }\n\n    if (parseInt(value) > 100) {\n      return createError({\n        path,\n        message: \"Số người đi tối đa là 100 người!!\"\n      });\n    }\n\n    if (parseInt(value) === 0) {\n      return createError({\n        path,\n        message: \"Số người đi phải lớn hơn 0\"\n      });\n    }\n\n    return true;\n  });\n});\nyup.addMethod(yup.string, \"numberChildren\", function (message) {\n  return this.test(\"numberChildren2\", message, function (value) {\n    const {\n      path,\n      createError\n    } = this;\n\n    function isNumeric(value) {\n      if (value === \"\") return true;\n      return /^-?\\d+$/.test(value);\n    }\n\n    if (!isNumeric(value)) {\n      return createError({\n        path,\n        message: \"Số trẻ em kí tự nhập phải là số!!\"\n      });\n    }\n\n    return true;\n  });\n});\nyup.addMethod(yup.string, \"day\", function (message) {\n  return this.test(\"day2\", message, function (value) {\n    const {\n      path,\n      createError\n    } = this;\n    const today = new Date();\n    let requireDay = new Date();\n    requireDay.setDate(requireDay.getDate() + 7);\n\n    if (value) {\n      const dateBooking = new Date(value);\n      console.log(dateBooking.getDate());\n      console.log(requireDay);\n      console.log(today);\n\n      if (dateBooking.getDate() >= today.getDate() && dateBooking.getDate() <= requireDay.getDate()) {\n        if (dateBooking.getMonth() !== today.getMonth()) {\n          return createError({\n            path,\n            message: `ngày đặt bàn phải trong khoảng 7 ngày tính từ hôm nay đến ngày ${requireDay}\n            )}`\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return true;\n  });\n});\nexport default yup;","map":{"version":3,"sources":["V:/Buffet-t12/client/src/yup/yupGlobal.ts"],"names":["yup","addMethod","string","message","test","value","path","createError","isNumeric","parseInt","today","Date","requireDay","setDate","getDate","dateBooking","console","log","getMonth"],"mappings":"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","sourcesContent":["import * as yup from \"yup\";\r\nimport { AnyObject, Maybe } from \"yup/lib/types\";\r\n\r\nyup.addMethod<yup.StringSchema>(\r\n  yup.string,\r\n  \"numberAdults\",\r\n  function (message?) {\r\n    return this.test(\"numberAdults2\", message, function (value) {\r\n      const { path, createError } = this;\r\n\r\n      function isNumeric(value: string) {\r\n        return /^-?\\d+$/.test(value);\r\n      }\r\n\r\n      if (!isNumeric(value!)) {\r\n        return createError({\r\n          path,\r\n          message: \"Số người đi kí tự nhập phải là số!!\",\r\n        });\r\n      }\r\n\r\n      if (parseInt(value!) > 100) {\r\n        return createError({\r\n          path,\r\n          message: \"Số người đi tối đa là 100 người!!\",\r\n        });\r\n      }\r\n\r\n      if (parseInt(value!) === 0) {\r\n        return createError({\r\n          path,\r\n          message: \"Số người đi phải lớn hơn 0\",\r\n        });\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n);\r\n\r\nyup.addMethod<yup.StringSchema>(\r\n  yup.string,\r\n  \"numberChildren\",\r\n  function (message?) {\r\n    return this.test(\"numberChildren2\", message, function (value) {\r\n      const { path, createError } = this;\r\n\r\n      function isNumeric(value: string) {\r\n        if (value === \"\") return true;\r\n        return /^-?\\d+$/.test(value);\r\n      }\r\n\r\n      if (!isNumeric(value!)) {\r\n        return createError({\r\n          path,\r\n          message: \"Số trẻ em kí tự nhập phải là số!!\",\r\n        });\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n);\r\n\r\nyup.addMethod<yup.StringSchema>(yup.string, \"day\", function (message?) {\r\n  return this.test(\"day2\", message, function (value) {\r\n    const { path, createError } = this;\r\n\r\n    const today = new Date();\r\n\r\n    let requireDay = new Date();\r\n    requireDay.setDate(requireDay.getDate() + 7);\r\n\r\n    if (value) {\r\n      const dateBooking = new Date(value);\r\n      console.log(dateBooking.getDate());\r\n      console.log(requireDay);\r\n      console.log(today);\r\n\r\n      if (\r\n        dateBooking.getDate() >= today.getDate() &&\r\n        dateBooking.getDate() <= requireDay.getDate()\r\n      ) {\r\n        if (dateBooking.getMonth() !== today.getMonth()) {\r\n          return createError({\r\n            path,\r\n            message: `ngày đặt bàn phải trong khoảng 7 ngày tính từ hôm nay đến ngày ${requireDay}\r\n            )}`,\r\n          });\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  });\r\n});\r\n\r\ndeclare module \"yup\" {\r\n  interface StringSchema<\r\n    TType extends Maybe<string> = string | undefined,\r\n    TContext extends AnyObject = AnyObject,\r\n    TOut extends TType = TType\r\n  > extends yup.BaseSchema<TType, TContext, TOut> {\r\n    numberAdults(message?: string): StringSchema<TType, TContext>;\r\n  }\r\n\r\n  interface StringSchema<\r\n    TType extends Maybe<string> = string | undefined,\r\n    TContext extends AnyObject = AnyObject,\r\n    TOut extends TType = TType\r\n  > extends yup.BaseSchema<TType, TContext, TOut> {\r\n    numberChildren(message?: string): StringSchema<TType, TContext>;\r\n  }\r\n\r\n  interface StringSchema<\r\n    TType extends Maybe<string> = string | undefined,\r\n    TContext extends AnyObject = AnyObject,\r\n    TOut extends TType = TType\r\n  > extends yup.BaseSchema<TType, TContext, TOut> {\r\n    day(message?: string): StringSchema<TType, TContext>;\r\n  }\r\n\r\n  /* interface NumberSchema<\r\n    TType extends Maybe<number> = number | undefined,\r\n    TContext extends AnyObject = AnyObject,\r\n    TOut extends TType = TType\r\n  > extends yup.BaseSchema<TType, TContext, TOut> {\r\n    numberAdults(message?: string): NumberSchema<TType, TContext>;\r\n  } */\r\n}\r\n\r\nexport default yup;\r\n"]},"metadata":{},"sourceType":"module"}