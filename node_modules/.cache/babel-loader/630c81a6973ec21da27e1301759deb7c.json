{"ast":null,"code":"import * as yup from \"yup\";\nyup.addMethod(yup.number, \"numberPeople\", function (message) {\n  console.log(123);\n  return this.test(\"numberPeople\", message, function (value) {\n    const {\n      path,\n      createError\n    } = this;\n    console.log(123);\n\n    if (!value) {\n      return createError({\n        path,\n        message: message ? message : \"Field is required!!\"\n      });\n    }\n\n    return true;\n  });\n});\nexport default yup;","map":{"version":3,"sources":["V:/Buffet-t12/client/src/yup/yupGlobal.ts"],"names":["yup","addMethod","number","message","console","log","test","value","path","createError"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGAA,GAAG,CAACC,SAAJ,CACED,GAAG,CAACE,MADN,EAEE,cAFF,EAGE,UAAUC,OAAV,EAA2B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAEA,SAAO,KAAKC,IAAL,CAAU,cAAV,EAA0BH,OAA1B,EAAmC,UAAUI,KAAV,EAAiB;AACzD,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAwB,IAA9B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AAEA,QAAI,CAACE,KAAL,EAAY;AACV,aAAOE,WAAW,CAAC;AACjBD,QAAAA,IADiB;AAEjBL,QAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAH,GAAa;AAFZ,OAAD,CAAlB;AAID;;AAED,WAAO,IAAP;AACD,GAZM,CAAP;AAaD,CAnBH;AAwCA,eAAeH,GAAf","sourcesContent":["import * as yup from \"yup\";\r\nimport { AnyObject, Maybe } from \"yup/lib/types\";\r\n\r\nyup.addMethod<yup.NumberSchema>(\r\n  yup.number,\r\n  \"numberPeople\",\r\n  function (message: string) {\r\n    console.log(123);\r\n\r\n    return this.test(\"numberPeople\", message, function (value) {\r\n      const { path, createError } = this;\r\n      console.log(123);\r\n\r\n      if (!value) {\r\n        return createError({\r\n          path,\r\n          message: message ? message : \"Field is required!!\",\r\n        });\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n);\r\n\r\ndeclare module \"yup\" {\r\n  /* interface StringSchema<\r\n    TType extends Maybe<string> = string | undefined,\r\n    TContext extends AnyObject = AnyObject,\r\n    TOut extends TType = TType\r\n  > extends yup.BaseSchema<TType, TContext, TOut> {\r\n    emptyAsUndefined(a: any): StringSchema<TType, TContext>;\r\n  } */\r\n\r\n  interface NumberSchema<\r\n    TType extends Maybe<number> = number | undefined,\r\n    TContext extends AnyObject = AnyObject,\r\n    TOut extends TType = TType\r\n  > extends yup.BaseSchema<TType, TContext, TOut> {\r\n    numberPeople(message: string): NumberSchema<TType, TContext>;\r\n  }\r\n}\r\n\r\nexport default yup;\r\n"]},"metadata":{},"sourceType":"module"}