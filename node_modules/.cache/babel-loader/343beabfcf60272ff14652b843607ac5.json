{"ast":null,"code":"var _jsxFileName = \"V:\\\\Buffet-t12\\\\client\\\\src\\\\App.tsx\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Layout from \"./layout\";\nimport { homeRoutes, accountRouters } from \"./pages/routes\";\nimport Login from \"components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = [...homeRoutes];\nconst account = [...accountRouters];\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this),\n        children: pages.map((route, idx) => /*#__PURE__*/_jsxDEV(Route, {\n          path: route.path,\n          element: route.element\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/account\",\n        children: account.map((route, idx) => /*#__PURE__*/_jsxDEV(Route, {\n          path: route.path,\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 57\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["V:/Buffet-t12/client/src/App.tsx"],"names":["BrowserRouter","Route","Routes","Layout","homeRoutes","accountRouters","Login","pages","account","App","map","route","idx","path","element"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,gBAA3C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAGA,MAAMC,KAAK,GAAG,CAAC,GAAGH,UAAJ,CAAd;AACA,MAAMI,OAAO,GAAG,CAAC,GAAGH,cAAJ,CAAhB;;AAEA,SAASI,GAAT,GAAe;AACb,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAAhB;AAAA,kBACGF,KAAK,CAACG,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,kBACT,QAAC,KAAD;AAAiB,UAAA,IAAI,EAAED,KAAK,CAACE,IAA7B;AAAmC,UAAA,OAAO,EAAEF,KAAK,CAACG;AAAlD,WAAYF,GAAZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA,kBACGJ,OAAO,CAACE,GAAR,CAAY,CAACC,KAAD,EAAQC,GAAR,kBACX,QAAC,KAAD;AAAiB,UAAA,IAAI,EAAED,KAAK,CAACE,IAA7B;AAAmC,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA5C,WAAYD,GAAZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KAjBQH,G;AAmBT,eAAeA,GAAf","sourcesContent":["import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Layout from \"./layout\";\nimport { homeRoutes, accountRouters } from \"./pages/routes\";\nimport Login from \"components/Login\";\nimport Home from \"pages/home\";\n\nconst pages = [...homeRoutes];\nconst account = [...accountRouters];\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route element={<Layout />}>\n          {pages.map((route, idx) => (\n            <Route key={idx} path={route.path} element={route.element} />\n          ))}\n        </Route>\n        <Route path=\"/account\">\n          {account.map((route, idx) => (\n            <Route key={idx} path={route.path} element={<Login />} />\n          ))}\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}